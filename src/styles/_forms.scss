@use './variables' as v;

// Form controls: inputs, selects, and textareas
// - Normalize appearance and sizing for consistency across browsers
// - Use CSS vars for colors/radius so themes can override at runtime
// - Use Sass timing vars for smooth transitions
input[type="text"],
input[type="email"],
input[type="password"],
input[type="search"],
input[type="number"],
input[type="date"],
input[type="tel"],
select,
textarea {
  appearance: none; // Remove native OS look (where supported)
  width: 100%; // Take full width of the container
  height: 38px; // Consistent control height
  padding: 0 0.75rem; // Horizontal padding for comfortable typing
  border: 1px solid var(--color-border); // Neutral border
  border-radius: var(--radius); // Shared radius token
  background: var(--color-surface); // Surface background (cards/controls)
  color: var(--color-text); // Default text color
  transition: border-color v.$speed, box-shadow v.$speed, background-color v.$speed; // Smooth UI feedback
}

// Multi-line text input tweaks
textarea { min-height: 88px; padding: 0.5rem 0.75rem; resize: vertical; }

// Placeholder text color is muted for subtlety
input::placeholder, textarea::placeholder { color: var(--color-text-muted); }

// Focus state: highlight border and show accessible focus ring
input:focus, select:focus, textarea:focus {
  border-color: var(--color-primary);
  box-shadow: var(--ring);
}

// Disabled state: reduce contrast and prevent interaction
input[disabled], select[disabled], textarea[disabled] {
  opacity: .6;
  cursor: not-allowed;
  background: #f9fafb;
}

/* Checkboxes and radios: opt into accent-color where supported for easy theming */
input[type="checkbox"], input[type="radio"] {
  width: 16px; height: 16px;
  accent-color: var(--color-primary);
}

/* Buttons: primary style by default
   - Inline-flex for proper centering
   - Uses brand color and contrast token for text
   - Transition timings from Sass variables */
button, [type="button"], [type="submit"], [type="reset"] {
  display: inline-flex; align-items: center; justify-content: center;
  height: 38px; padding: 0 0.9rem; // Match input height for visual rhythm
  border-radius: var(--radius);
  border: 1px solid var(--color-primary);
  color: var(--color-primary-contrast);
  background: var(--color-primary);
  font-weight: 600; cursor: pointer;
  transition: filter v.$speed-fast, background-color v.$speed, border-color v.$speed;
}
button:hover { filter: brightness(0.98); } // Subtle hover feedback
button:active { filter: brightness(0.96); } // Pressed state
button:disabled { opacity: .65; cursor: not-allowed; }

/* Secondary button variant: neutral surface with standard text color */
.button-secondary {
  background: #fff;
  color: var(--color-text);
  border-color: var(--color-border);
}

/* Optional field wrapper for form rows: label, hint, and error styling */
.field { display: grid; gap: 0.35rem; }
.field > label { font-size: 0.9rem; color: var(--color-text-muted); }
.field .hint { font-size: 0.85rem; color: var(--color-text-muted); }
.field .error {
  color: var(--color-danger); // Error text uses semantic token
  background: #fee4e2; // Light error background
  border: 1px solid #fecdca; // Subtle error border
  padding: 0.4rem 0.5rem;
  border-radius: var(--radius);
}
