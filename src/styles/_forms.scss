@use './variables' as v;

// Form controls: inputs, selects, and textareas
// - Normalize appearance and sizing for consistency across browsers
// - Use CSS vars for colors/radius so themes can override at runtime
// - Use Sass timing vars for smooth transitions
input[type="text"],
input[type="email"],
input[type="password"],
input[type="search"],
input[type="number"],
input[type="date"],
input[type="tel"],
select,
textarea {
  appearance: none; // Remove native OS look (where supported)
  width: 100%; // Take full width of the container
  height: 38px; // Consistent control height
  padding: 0 0.75rem; // Horizontal padding for comfortable typing
  border: 1px solid var(--color-border); // Neutral border
  border-radius: var(--radius); // Shared radius token
  background: var(--color-surface); // Surface background (cards/controls)
  color: var(--color-text); // Default text color
  transition: border-color v.$speed, box-shadow v.$speed, background-color v.$speed; // Smooth UI feedback
}

// Multi-line text input tweaks
textarea {
  min-height: 88px;
  padding: 0.5rem 0.75rem;
  resize: vertical;
}

// Placeholder text color is muted for subtlety
input::placeholder, textarea::placeholder {
  color: var(--color-text-muted);
}

// Focus state: highlight border and show accessible focus ring
input:focus, select:focus, textarea:focus {
  border-color: var(--color-primary);
  box-shadow: var(--ring);
}

// Disabled state: reduce contrast and prevent interaction
input[disabled], select[disabled], textarea[disabled] {
  opacity: .6;
  cursor: not-allowed;
  background: #f9fafb;
}

/* Checkboxes and radios: opt into accent-color where supported for easy theming */
input[type="checkbox"], input[type="radio"] {
  width: 16px;
  height: 16px;
  accent-color: var(--color-primary);
}

/* Buttons: primary style by default
   - Inline-flex for proper centering
   - Uses brand color and contrast token for text
   - Transition timings from Sass variables */
button, [type="button"], [type="submit"], [type="reset"] {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  height: 38px;
  padding: 0 0.9rem; // Match input height for visual rhythm
  border-radius: var(--radius);
  border: 1px solid var(--color-primary);
  color: var(--color-primary-contrast);
  background: var(--color-primary);
  font-weight: 600;
  cursor: pointer;
  transition: filter v.$speed-fast, background-color v.$speed, border-color v.$speed;
}

button:hover {
  filter: brightness(0.98);
}

// Subtle hover feedback
button:active {
  filter: brightness(0.96);
}

// Pressed state
button:disabled {
  opacity: .65;
  cursor: not-allowed;
}

/* Secondary button variant: neutral surface with standard text color */
.button-secondary {
  background: #fff;
  color: var(--color-text);
  border-color: var(--color-border);
}

/* Optional field wrapper for form rows: label, hint, and error styling */
.field {
  display: grid;
  gap: 0.35rem;
}

.field > label {
  font-size: 0.9rem;
  color: var(--color-text-muted);
}

.field .hint {
  font-size: 0.85rem;
  color: var(--color-text-muted);
}

.field .error {
  color: var(--color-danger); // Error text uses semantic token
  background: #fee4e2; // Light error background
  border: 1px solid #fecdca; // Subtle error border
  padding: 0.4rem 0.5rem;
  border-radius: var(--radius);
}

/* === Shared form layout utilities (centralized) === */
.wm-form {
  display: grid;
  gap: 1.25rem;
}

.form-grid {
  display: grid;
  gap: 1rem;
}

.form-grid--auto2 {
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
}

.form-grid--2 {
  grid-template-columns: repeat(2, 1fr);
}

.form-grid--3 {
  grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
}

.form-grid--max2 {
  grid-template-columns: repeat(2, minmax(0, 1fr));
}

@media (max-width: 640px) {
  .form-grid--max2 {
    grid-template-columns: 1fr;
  }
}

.field--full {
  grid-column: 1 / -1;
}

.form-actions {
  display: flex;
  justify-content: flex-end;
  gap: .75rem;
}

.form-error-global {
  font-size: 0.75rem;
  color: var(--color-danger);
}

/* Compact variant for tighter vertical rhythm */
.field--compact > label {
  font-size: 0.75rem;
  font-weight: 600;
}

/* Uploader block (generic placeholder style) */
.uploader-block {
  display: grid;
  gap: 0.35rem;
  font-size: 0.7rem;
  padding: 0.75rem;
  border: 1px dashed var(--color-border);
  border-radius: var(--radius);
  background: var(--color-surface-alt, var(--color-surface));
}

.uploader-block > .uploader-label {
  font-size: 0.75rem;
  font-weight: 600;
}

/* Spacing helper for groups */
.form-section {
  display: grid;
  gap: 1.25rem;
}

/* Inline errors smaller variant */
.field .error--inline {
  font-size: 0.65rem;
  color: var(--color-danger);
}

.field.required > label::after {
  content: ' *';
  color: var(--color-danger);
}

/* === Auth / form shared utilities extracted from components === */
.auth-shell {
  min-height: 100dvh;
  display: grid;
  place-items: center;
  padding: 2rem;
  background: var(--color-bg, var(--color-surface-alt, #fff));
}

.form-card {
  width: 100%;
  display: grid;
  gap: 0.75rem; /* default vertical rhythm */
  padding: 1.5rem; /* internal spacing (was duplicated) */
}
.form-card--sm { max-width: 420px; }
.form-card--md { max-width: 540px; }

/* Optional bigger button height for main submit actions */
.btn--lg { height: 42px; }

/* === Shared headline / auth typography === */
.headline { display: grid; gap: 0.25rem; margin-bottom: 0.25rem; }
.greeting { margin: 0; font-size: 1.75rem; line-height: 1.2; }
.subtitle { margin: 0; font-size: 0.875rem; color: var(--color-text-muted, var(--color-text)); opacity: .8; }
.back-link { display:inline-block; font-size:0.65rem; text-transform:uppercase; letter-spacing:.05em; text-decoration:none; color:var(--color-primary); font-weight:600; margin-bottom:0.25rem; }
.back-link:hover { text-decoration: underline; }
.signin-hint, .signup-hint { margin: 0.75rem 0 0; text-align: center; font-size: 0.75rem; }
.signin-hint a, .signup-hint a { color: var(--color-primary); text-decoration: none; font-weight: 500; }
.signin-hint a:hover, .signup-hint a:hover { text-decoration: underline; }

/* Utility grid */
.two-cols { display:grid; gap:0.75rem; grid-template-columns: repeat(auto-fit, minmax(180px, 1fr)); }

/* Bank branch picker overlay */
.branch-picker-overlay { position:fixed; inset:0; background:rgba(0,0,0,.35); display:grid; place-items:center; z-index:1000; animation: fadeIn .18s ease-out; }
.branch-picker { width:min(860px,92vw); max-height:82vh; background:var(--color-surface,#fff); border-radius:var(--radius-lg,var(--radius)); padding:1rem 1.25rem 1.25rem; display:grid; grid-template-rows:auto 1fr auto; gap:0.75rem; box-shadow:0 6px 24px -4px rgba(0,0,0,.15),0 2px 6px -2px rgba(0,0,0,.1); animation: scaleIn .22s cubic-bezier(.4,.2,.2,1); }
.branch-picker header { display:flex; justify-content:space-between; align-items:center; }
.branch-picker h2 { margin:0; font-size:1.1rem; }
.branch-picker .filters { display:grid; gap:0.75rem; grid-template-columns:repeat(auto-fit,minmax(160px,1fr)); }
.branch-picker .results { overflow:auto; border:1px solid var(--color-border); border-radius:var(--radius); background:var(--color-surface-alt,var(--color-surface)); }
.branch-picker .result-row { display:grid; grid-template-columns:1fr auto; gap:0.5rem; padding:0.55rem 0.75rem; font-size:0.75rem; cursor:pointer; align-items:center; border-bottom:1px solid var(--color-border); }
.branch-picker .result-row:last-child { border-bottom:none; }
.branch-picker .result-row:hover { background:var(--color-surface-hover, #f6f7f9); }
.branch-picker .result-row.active { outline:2px solid var(--color-primary); outline-offset:-2px; }
.branch-picker .empty { padding:1.25rem; text-align:center; font-size:0.75rem; color:var(--color-text-muted); }
.branch-picker footer { display:flex; justify-content:space-between; gap:0.75rem; }
.branch-picker .actions { display:flex; gap:0.5rem; }
.selector-input { min-height:38px; display:flex; align-items:center; padding:0 0.75rem; border:1px dashed var(--color-border); border-radius:var(--radius); background:var(--color-surface-alt,var(--color-surface)); font-size:0.8rem; cursor:pointer; }
.selector-input.placeholder { color:var(--color-text-muted); font-style:italic; }

@keyframes fadeIn { from { opacity:0 } to { opacity:1 } }
@keyframes scaleIn { from { transform:scale(.96); opacity:0 } to { transform:scale(1); opacity:1 } }

/* Subtle exit animation helper (class toggled before removal) */
.branch-picker-overlay.closing { animation: fadeOut .16s ease-in forwards; }
.branch-picker-overlay.closing .branch-picker { animation: scaleOut .16s ease-in forwards; }
@keyframes fadeOut { to { opacity:0 } }
@keyframes scaleOut { to { transform:scale(.97); opacity:0 } }
